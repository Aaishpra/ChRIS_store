# Generated by Django 2.2.12 on 2020-06-03 23:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('plugins', '0011_pluginparameter_short_flag'),
    ]

    operations = [
        migrations.CreateModel(
            name='PluginMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('public_repo', models.URLField(max_length=300)),
                ('license', models.CharField(blank=True, max_length=50)),
                ('type', models.CharField(choices=[('ds', 'Data plugin'), ('fs', 'Filesystem plugin')], default='ds', max_length=4)),
                ('icon', models.URLField(blank=True, max_length=300)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('authors', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ('type', '-creation_date'),
            },
        ),
        migrations.AlterModelOptions(
            name='plugin',
            options={'ordering': ('meta', '-creation_date')},
        ),
        migrations.AlterField(
            model_name='plugin',
            name='max_gpu_limit',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AlterField(
            model_name='plugin',
            name='min_gpu_limit',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.CreateModel(
            name='PluginMetaStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plugins.PluginMeta')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('meta', 'user')},
            },
        ),
        migrations.AddField(
            model_name='pluginmeta',
            name='fan',
            field=models.ManyToManyField(related_name='favorite_plugin_metas', through='plugins.PluginMetaStar', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pluginmeta',
            name='owner',
            field=models.ManyToManyField(related_name='owned_plugin_metas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='plugin',
            name='meta',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='plugins', to='plugins.PluginMeta'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='plugin',
            unique_together={('meta', 'version')},
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='authors',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='category',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='icon',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='license',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='modification_date',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='name',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='public_repo',
        ),
        migrations.RemoveField(
            model_name='plugin',
            name='type',
        ),
    ]
